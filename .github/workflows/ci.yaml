name: CI Pipeline

on:
  push:
    branches:
      - main

permissions: 
  id-token: write
  contents: write

jobs:
  build:
    name: 'Build and Push'
    runs-on: ubuntu-latest

    steps:
      # Copia o código pra máquina
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Golang 
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.2

      - name: Configure Amazon AWS credentials
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::575108923772:role/ecr-role
          aws-region: us-east-1

      - name: AWS Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Generate tag based on commit hash
        id: generate_tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Pull, Tag and Build image 
        env: 
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          TAG: ${{ steps.generate_tag.outputs.sha }}
        run: | 
          docker pull postgres:latest
          docker tag postgres:latest $REGISTRY/postgres:$TAG
          docker build -t $REGISTRY/go-api:$TAG .
          docker push $REGISTRY/go-api:$TAG
          docker push $REGISTRY/postgres:$TAG
      
      - name: SSH to deploy on EC2 Server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |

            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 575108923772.dkr.ecr.us-east-1.amazonaws.com

            docker pull 575108923772.dkr.ecr.us-east-1.amazonaws.com/go-api:${{ steps.generate_tag.outputs.sha }}
            docker pull 575108923772.dkr.ecr.us-east-1.amazonaws.com/postgres:${{ steps.generate_tag.outputs.sha }}
            
            docker network create --driver bridge network-bridge
            docker run --network network-bridge --rm --name postgres -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=postgres -p 5432:5432 -d 575108923772.dkr.ecr.us-east-1.amazonaws.com/postgres:${{ steps.generate_tag.outputs.sha }}
            sleep 30s
            docker run --network network-bridge --name go-api -d -p 3000:3000 575108923772.dkr.ecr.us-east-1.amazonaws.com/go-api:${{ steps.generate_tag.outputs.sha }}

